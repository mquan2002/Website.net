@{
    ViewData["Title"] = "Danh sách cửa hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>

    #findLocationBtn {
        cursor: pointer;
    }


    #storeItems li {
        cursor: pointer;
    }

  
        #storeItems li:hover {
            background-color: #f1f1f1;
            cursor: pointer;
        }

    .leaflet-marker-icon {
        cursor: pointer;
    }
</style>

<section class="py-md-4 bg-cover--deep-see bg-img-sm-none" id="search-address">
    <div class="container-md">
        <div class="row justify-content-center">
            <div class="col-12 py-md-2 col-lg-8 px-0 px-md-2">
                <div class="org-search">
                    <div class="tab-content">
                        <div class="tab-pane active">
                            <div class="tab-pane-content" style="background-color: #FDE1E4; border-radius: 10px; padding: 20px;">
                                <div style="display: flex; flex-direction: column; align-items: center; margin-top: 20px;">

                                    <div id="enteredAddress" style="font-size: 16px; font-weight: bold; margin-bottom: 20px; color: #FF0033;"></div>

                                    <div id="selectedStore" style="font-size: 16px; font-weight: bold; color: #FF0033;"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div style="display: flex; height: 80vh; margin-top: 20px;">

    <div id="map" style="flex: 3; border-radius: 10px; margin-right: 10px;">
        <div id="input-overlay" style="position: absolute; top: 10px; left: 50%; transform: translateX(-50%); z-index: 1000;">
            <input type="text" id="addressInput" class="form-control" placeholder="Nhập địa chỉ của bạn" style="width: 300px; display: inline-block;" />
            <button id="findLocationBtn" class="btn btn-primary" style="margin-left: 10px;">Tìm</button>
        </div>
    </div>


    <div id="store-list" style="flex: 1; background-color: #f8f9fa; overflow-y: auto; padding: 10px; border-radius: 10px;">
        <ul id="storeItems" style="list-style: none; padding: 0;"></ul>
    </div>
</div>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

<script>
    let userMarker;
    let storeMarkers = [];  // Mảng lưu các marker của cửa hàng
    let stores = [];
    const storesAPIUrl = '/api/storesAPI';
    const enteredAddress = document.getElementById('enteredAddress');
    const selectedStore = document.getElementById('selectedStore');


    function calculateDistance(lat1, lon1, lat2, lon2) {
        const R = 6371; 
        const dLat = (lat2 - lat1) * (Math.PI / 180);
        const dLon = (lon2 - lon1) * (Math.PI / 180);
        const a =
            Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(lat1 * (Math.PI / 180)) *
            Math.cos(lat2 * (Math.PI / 180)) *
            Math.sin(dLon / 2) *
            Math.sin(dLon / 2);
        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return R * c; 
    }


    const map = L.map('map').setView([10.8231, 106.6297], 12);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);


    fetch(storesAPIUrl)
        .then(response => response.json())
        .then(stores => {
            if (!stores || stores.length === 0) {
                console.warn('Không có dữ liệu cửa hàng.');
                return;
            }
            initMapAndList(stores);
        })
        .catch(error => console.error('Lỗi khi lấy danh sách cửa hàng:', error));

    function initMapAndList(stores) {

        stores.forEach(store => {
            if (store.latitude && store.longitude) {
                const marker = L.marker([store.latitude, store.longitude]).addTo(map);
                marker.bindPopup(`<strong>${store.name}</strong><br>${store.address}<br>${store.description}`);

                storeMarkers.push({ store, marker }); 
            }
        });


        document.getElementById('findLocationBtn').addEventListener('click', function () {
            const addressInput = document.getElementById('addressInput').value.trim();
            if (!addressInput) {
                alert('Vui lòng nhập địa chỉ!');
                return;
            }


            fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(addressInput)}&format=json`)
                .then(response => response.json())
                .then(data => {
                    if (data.length === 0) {
                        alert('Không tìm thấy vị trí phù hợp.');
                        return;
                    }

                    const { lat, lon } = data[0];
                    const userLat = parseFloat(lat);
                    const userLon = parseFloat(lon);

                    map.setView([userLat, userLon], 15);


                    if (userMarker) map.removeLayer(userMarker);
                    userMarker = L.marker([userLat, userLon]).addTo(map)
                        .bindPopup(`Địa chỉ của bạn: ${addressInput}`).openPopup();

  
                    const sortedStores = stores.map(store => {
                        const distance = calculateDistance(userLat, userLon, store.latitude, store.longitude);
                        return { ...store, distance };
                    }).sort((a, b) => a.distance - b.distance);

                    updateStoreList(sortedStores);


                    enteredAddress.textContent = `Địa chỉ đã nhập: ${addressInput}`; // Hiển thị địa chỉ đã nhập
                })
                .catch(error => {
                    console.error('Geocoding error:', error);
                    alert('Có lỗi xảy ra khi tìm kiếm địa chỉ.');
                });
        });


        function handleStoreClick(store) {
            const storeLat = store.latitude;
            const storeLon = store.longitude;


            map.setView([storeLat, storeLon], 15);


            const storeMarker = L.marker([storeLat, storeLon]).addTo(map)
                .bindPopup(`<strong>${store.name}</strong><br>${store.address}<br>${store.description}`).openPopup();


            selectedStore.textContent = `Cửa hàng đã chọn: ${store.name}`;
        }


        function updateStoreList(stores) {
            const storeList = document.getElementById('storeItems');
            storeList.innerHTML = '';

            stores.forEach(store => {
                const listItem = document.createElement('li');
                listItem.style.marginBottom = '15px';
                listItem.style.padding = '10px';
                listItem.style.border = '1px solid #ddd';
                listItem.style.borderRadius = '5px';

                listItem.innerHTML = `
                        <strong>${store.name}</strong><br>
                        <span>Địa chỉ: ${store.address}</span><br>
                        <span>Mô tả: ${store.description}</span><br>
                        <span>Khoảng cách: ${store.distance.toFixed(2)} km</span>
                    `;


                listItem.addEventListener('click', function () {
                    handleStoreClick(store);
                });

                storeList.appendChild(listItem);
            });
        }
    }
</script>
