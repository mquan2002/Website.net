@{
    ViewData["Title"] = "Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model List<Category>

}

@functions {
    string ToClassName(string name)
    {
        return name.Replace(" ", "-").ToLower(); // Thay thế khoảng trắng bằng dấu gạch ngang
    }
}
<section class="hero">
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="hero__search" style="margin-bottom: -50px">
                    <div class="hero__search__form">
                        <form action="#">
                            <div class="hero__search__categories">
                                All Categories
                                <span class="arrow_carrot-down"></span>
                            </div>
                            <input type="text" placeholder="What do you need?">
                            <button type="submit" class="site-btn">SEARCH</button>
                        </form>
                    </div>
                    <div class="hero__search__phone">
                        <div class="hero__search__phone__icon">
                            <i class="fa fa-phone"></i>
                        </div>
                        <div class="hero__search__phone__text">
                            <h5>1900 6099</h5>
                            <span>support 24/7 time</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
 
<div id="toast" class="toast">
    <div class="toast-body">Sản phẩm đã được thêm vào giỏ hàng!</div>
</div>

<section class="featured spad" style="padding-top: 15px">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-title">
                    <h2>Thực đơn</h2>
                </div>
                <div class="featured__controls">
                    <ul>
                        <li class="active" data-filter="*">All</li>
                        @foreach (var category in Model)
                        {
                            <li data-filter=".@ToClassName(category.CategoryName)">@category.CategoryName</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="row featured__filter">
            @foreach (var category in Model)
            {
                foreach (var product in category.Products)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6 mix @ToClassName(category.CategoryName)">
                        <div class="featured__item">
                            <a href="javascript:void(0);" onclick="showAddToCartModal(@product.ProductId)">
                                <div class="featured__item__pic set-bg" data-setbg="@product.ImageUrl" style="background-image: url('@product.ImageUrl');">
                                </div>
                            </a>
                            <div class="featured__item__text">
                                <h6><a href="javascript:void(0);" onclick="showAddToCartModal(@product.ProductId)">@product.ProductName</a></h6>
                                <h5>@product.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</h5>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>
<div id="modalContainer"></div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function showAddToCartModal(productId) {
        $.ajax({
            url: '/Cart/ShowAddToCartModal',
            type: 'GET',
            data: { productId: productId },
            success: function (result) {
                $('#modalContainer').html(result);
                $('#addToCartModal').modal('show');
            }
        });
    }

    function showToast(message) {
        $('#toast .toast-body').text(message);
        $('#toast').css('display', 'block');
        setTimeout(function () {
            let opacity = 1;
            let fadeOutInterval = setInterval(function () {
                if (opacity > 0) {
                    opacity -= 0.05;
                    $('#toast').css('opacity', opacity);
                } else {
                    clearInterval(fadeOutInterval);  // Dừng fade-out khi opacity = 0
                    $('#toast').css('display', 'none');  // Ẩn toast khi hoàn thành
                }
            }, 50);  // Mỗi 50ms giảm opacity 0.05
        }, 800);  // Màn hình hiển thị toast trong xs
    }

    function updateCartCount() {
        $.ajax({
            url: '/Cart/GetCartItemCount', // Endpoint để lấy số lượng sản phẩm trong giỏ
            type: 'GET',
            success: function (response) {
                if (response && response.count !== undefined) {
                    // Cập nhật số lượng sản phẩm trên biểu tượng giỏ hàng
                    $('.header__cart span').text(response.count);
                }
            },
            error: function () {
                console.error("Không thể cập nhật số lượng giỏ hàng.");
            }
        });
    }

    function addToCart() {
        var form = $('#addToCartForm');
        $.ajax({
            url: form.attr('action'),
            type: 'POST',
            data: form.serialize(),
            success: function (response) {
                if (response.success) {
                    $('#addToCartModal').modal('hide');
                    showToast(response.message);
                    updateCartCount(); // Cập nhật số lượng giỏ hàng
                    refreshCartIcon();
                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("Có lỗi xảy ra khi thêm vào giỏ hàng.");
            }
        });
    }

    function refreshCartIcon() {
        $.ajax({
            url: '/Cart/RefreshCartIcon',
            type: 'GET',
            success: function (html) {
                $('.header__cart').html(html);
            },
            error: function () {
                console.error('Không thể làm mới icon giỏ hàng.');
            }
        });
    }
</script>

<style>
    .toast {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        display: none;
        opacity: 1;
        z-index: 9999;
    }

    .featured__item__pic {
        transition: transform 0.3s ease; 
    }
        .featured__item__pic:hover {
            transform: scale(1.05); 
        }

    .featured__item__text h6 a {
        text-decoration: none; 
        color: black; 
        
    }
        .featured__item__text h6 a:hover {
            font-weight: bolder;
        }

    .featured__controls li {
        display: inline-block;
        transition: font-size 0.3s ease;
    }
        .featured__controls li:hover {
            font-size: 23px;
            font-weight: bold;
        }
</style>
