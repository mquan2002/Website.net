@{
    ViewData["Title"] = "Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model List<Category>

}

@functions {
    string ToClassName(string name)
    {
        return name.Replace(" ", "-").ToLower(); // Thay thế khoảng trắng bằng dấu gạch ngang
    }
}
<section class="hero">
    <div class="container">
        <div class="row">
            <div class="col" style="margin-top:10px; display:flex; justify-content:center;">
                <form id="searchForm">
                    <div class="search-input-container">
                        <i class="fa fa-search search-icon"></i>
                        <input type="text" id="searchQuery" placeholder="What do you need?" onkeyup="searchProductsLive()">
                    </div>
                </form>


                    <!-- Drop-down box hiển thị kết quả -->
                    <div id="searchResults"></div>
                </div>

                
        </div>
    </div>
</section>
 
<div id="toast" class="toast">
    <div class="toast-body">message trong controller</div>
</div>

<section class="featured spad" style="padding-top: 15px">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-title">
                    <h2>Thực đơn</h2>
                </div>
                <div class="featured__controls">
                    <ul>
                        <li class="active" data-filter="*">All</li>
                        @foreach (var category in Model)
                        {
                            <li data-filter=".@ToClassName(category.CategoryName)">@category.CategoryName</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="row featured__filter">
            @foreach (var category in Model)
            {
                foreach (var product in category.Products)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6 mix @ToClassName(category.CategoryName)">
                        <div class="featured__item">
                            <a href="javascript:void(0);" onclick="showAddToCartModal(@product.ProductId)">
                                <div class="featured__item__pic set-bg" data-setbg="@product.ImageUrl" style="background-image: url('@product.ImageUrl');">
                                </div>
                            </a>
                            <div class="featured__item__text">
                                <h6><a href="javascript:void(0);" onclick="showAddToCartModal(@product.ProductId)">@product.ProductName</a></h6>
                                <h5>@product.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</h5>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>
<div id="modalContainer"></div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function showAddToCartModal(productId) {
        $.ajax({
            url: '/Cart/ShowAddToCartModal',
            type: 'GET',
            data: { productId: productId },
            success: function (result) {
                $('#modalContainer').html(result);
                $('#addToCartModal').modal('show');
            }
        });
    }

    function showToast(message, callback) {
        $('#toast .toast-body').text(message);
        $('#toast').css('display', 'block');
        setTimeout(function () {
            let opacity = 1;
            let fadeOutInterval = setInterval(function () {
                if (opacity > 0) {
                    opacity -= 0.05;
                    $('#toast').css('opacity', opacity);
                } else {
                    clearInterval(fadeOutInterval);  // Dừng fade-out khi opacity = 0
                    $('#toast').css('display', 'none');  // Ẩn toast khi hoàn thành
                    if (typeof callback === "function") {
                        callback();
                    }
                }
            }, 50);  // Mỗi 50ms giảm opacity 0.05
        }, 100);  // Màn hình hiển thị toast trong xs
    }

    function updateCartCount() {
        $.ajax({
            url: '/Cart/GetCartItemCount', // Endpoint để lấy số lượng sản phẩm trong giỏ
            type: 'GET',
            success: function (response) {
                if (response && response.count !== undefined) {
                    // Cập nhật số lượng sản phẩm trên biểu tượng giỏ hàng
                    $('.header__cart span').text(response.count);
                }
            },
            error: function () {
                console.error("Không thể cập nhật số lượng giỏ hàng.");
            }
        });
    }

    function addToCart() {
        var form = $('#addToCartForm');
        $.ajax({
            url: form.attr('action'),
            type: 'POST',
            data: form.serialize(),
            success: function (response) {
                if (response.success) {
                    showToast(response.message, function () {
                        $('#addToCartModal').modal('hide'); // Đóng modal sau khi toast tắt
                    });
                    updateCartCount(); // Cập nhật số lượng giỏ hàng
                   
                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("Có lỗi xảy ra khi thêm vào giỏ hàng.");
            }
        });
    }

    let debounceTimer;
    function searchProductsLive() {
        clearTimeout(debounceTimer); // Xóa timer trước đó
        debounceTimer = setTimeout(() => {
            const query = $('#searchQuery').val().trim(); // Lấy giá trị query
            if (!query) {
                $('#searchResults').hide(); // Ẩn dropdown nếu query trống
                return;
            }

            $.ajax({
                url: '/Menu/SearchLive', // Gọi API tìm kiếm
                type: 'GET',
                data: { query: query },
                success: function (results) {
                    console.log("Kết quả trả về:", results);
                    if (results && results.length > 0) {
                        let html = ''; // Khởi tạo nội dung drop-down
                        results.forEach(product => {
                            html += `
                                <div style="padding: 10px; cursor: pointer; border-bottom: 1px solid #ddd;"
                                     onclick="selectProduct(${product.productId})">
                                    <img src="${product.imageUrl}" alt="${product.productName}" style="width: 50px; height: 50px; object-fit: cover; margin-right: 10px;">
                                    <span>${product.productName}</span>
                                    <span style="float: right; color: green;">${new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(product.price)}</span>
                                </div>`;
                        });
                        $('#searchResults').html(html).show(); // Hiển thị kết quả
                    } else {
                        $('#searchResults').html('<div style="padding: 10px; color: #999;">Không tìm thấy sản phẩm</div>').show();
                    }
                },
                error: function () {
                    console.error("Không thể tìm kiếm sản phẩm.");
                }
            });
        }, 300); // Thực hiện sau 300ms (debounce)
    }


    function selectProduct(productId) {
        showAddToCartModal(productId);
    }


</script>

<style>
    .toast {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        display: none;
        opacity: 1;
        z-index: 9999;
    }

    .featured__item__pic {
        transition: transform 0.3s ease; 
    }
        .featured__item__pic:hover {
            transform: scale(1.05); 
        }

    .featured__item__text h6 a {
        text-decoration: none; 
        color: black; 
        
    }
        .featured__item__text h6 a:hover {
            font-weight: bolder;
        }

    .featured__controls li {
        display: inline-block;
        transition: font-size 0.3s ease;
    }
        .featured__controls li:hover {
            font-size: 23px;
            font-weight: bold;
        }

    .search-input-container {
        position: relative;
        width: 100%; 
    }

    .search-icon {
        position: absolute;
        left: 15px; 
        top: 50%;
        transform: translateY(-50%); 
        color: #ccc; 
        font-size: 18px; 
        pointer-events: none; 
    }

    #searchForm {
        width: 100%;
        margin: 0; 
        padding: 0;
        border-radius: 25px;
        background: none; 
        box-shadow: none; 
        position: relative;
    }

    
        #searchForm input[type="text"] {
            width: 100%; 
            box-sizing: border-box; 
            margin: 0;
            padding: 12px 15px 12px 50px; 
            font-size: 16px; 
            outline: none; 
            transition: all 0.3s ease; 
        } 

            #searchForm input[type="text"]:focus {
                border-color: #0056b3; 
                box-shadow: 0 0 10px rgba(0, 91, 179, 0.2); 
                width: 100%;
            }


    #searchResults {
        position: absolute;
        top: 100%; 
        left: 15px;
        
        width: 97.4%; 
        background-color: white; 
        border: 1px solid #ddd; 
        border-radius: 0 0 8px 8px; 
        max-height: 300px; 
        overflow-y: auto; 
        z-index: 1000; 
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    

        #searchResults::-webkit-scrollbar {
            width: 8px; 
        }

        #searchResults::-webkit-scrollbar-track {
            background: #f1f1f1; 
        }

        #searchResults::-webkit-scrollbar-thumb {
            background-color: #007bff; 
            border-radius: 10px; 
            border: 1px solid #ffffff; 
        }

</style>
