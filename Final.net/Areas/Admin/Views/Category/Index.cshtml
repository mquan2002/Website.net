@model IEnumerable<Final.net.Models.Category>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@if (ViewContext.HttpContext.Request.Query.ContainsKey("SearchType") && ViewContext.HttpContext.Request.Query.ContainsKey("SearchValue"))
{
    <a href="../admin/Category">Quay lại trang quản lý</a>
}


<form method="get" asp-action="Index" class="form-horizontal" onsubmit="return validateForm();">
    <select name="searchType">
        @if (ViewData["SearchType"] == "1" || Convert.ToInt32(ViewData["SearchType"]) == 0)
        {
            <option value="1" selected>
                Tìm kiếm theo Id
            </option>
            <option value="2">
                Tìm kiếm theo tên
            </option>
        }
        else
        {
            <option value="1">
                Tìm kiếm theo Id
            </option>
            <option value="2" selected>
                Tìm kiếm theo tên
            </option>
        }
    </select>

    <input type="text" id="searchValue" name="searchValue" value="@(ViewData["SearchValue"] ?? "")"
        placeholder="Tìm kiếm tại đây">
    <button type="submit">Search</button>
</form>

<div id="error-message" class="alert alert-danger" style="display: none;"></div>

<h1 style="text-align:center">Quản lý Danh Mục</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

@{
    var totalCategory = ViewData["TotalCategory"] as int? ?? 0;
}
@if (totalCategory > 0)
{

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.CategoryId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedAt)
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.CategoryId)</td>
                    <td class="image-product">
                        <img style="width: 80px; height: auto; padding-right : 5px" src="@item.CategoryImage"
                            alt="Category Image">
                        @Html.DisplayFor(modelItem => item.CategoryName)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                    <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CategoryId" class="btn btn-edit">Edit</a> 
                        <a asp-action="Details" asp-route-id="@item.CategoryId" class="btn btn-details">Details</a> 
                        <a asp-action="Delete" asp-route-id="@item.CategoryId" class="btn btn-delete">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination">
        @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
        {
            var currentPage = (int)ViewData["CurrentPage"];
            var totalPages = (int)ViewData["TotalPages"];
            var searchType = ViewData["searchType"];
            var searchValue = ViewData["searchValue"];

            <nav aria-label="Blog pagination">
                <ul class="pagination justify-content-center">
                    @{
                        int range = 3;
                        int startPage = Math.Max(1, currentPage - 1);
                        int endPage = Math.Min(totalPages, startPage + range - 1);
                        if (endPage - startPage + 1 < range)
                        {
                            startPage = Math.Max(1, endPage - range + 1);
                        }
                    }
                    @if (searchType == "0" || searchValue == "")
                    {
                        <li class="page-item @(currentPage == 1 ? "d-none" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)">Trước</a>
                        </li>



                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == currentPage ? "disabled" : "")" @(totalPages == 1 ? "d-none" : "")>
                                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                            </li>
                        }

                        <li class="page-item @(currentPage == totalPages ? "d-none" : "") @(totalPages == 1 ? "d-none" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)">Tiếp</a>
                        </li>
                    }
                    else
                    {

                        <li class="page-item @(currentPage == 1 ? "d-none" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)"
                                asp-route-searchType="@searchType" asp-route-searchValue="@searchValue"
                                class="btn btn-secondary">Trước</a>
                        </li>
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == currentPage ? "disabled" : "") @(totalPages == 1 ? "d-none" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchType="@searchType"
                                    asp-route-searchValue="@searchValue">@i</a>
                            </li>
                        }

                        <li class="page-item @(currentPage == totalPages ? "d-none" : "") @(totalPages == 1 ? "d-none" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)"
                                asp-route-searchType="@searchType" asp-route-searchValue="@searchValue">Tiếp</a>
                        </li>
                    }

                </ul>
                <p>
                    Page @ViewData["CurrentPage"] of @ViewData["totalPages"]
                </p>
            </nav>
        }
    </div>

}



<style>
    .form-horizontal {
        width: : 100%;
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 16px 0;
    }

    select {
        padding: 8px 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f9f9f9;
        font-size: 16px;
        color: #333;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
    }

    select:focus {
        outline: none;
        border-color: #1a73e8;
        box-shadow: 0 0 4px rgba(26, 115, 232, 0.5);
    }

    input[type="text"],
    input[type="email"],
    input[type="number"],
    input[type="password"] {
        padding: 8px 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        color: #333;
        flex: 1;
    }

    input:focus {
        outline: none;
        border-color: #1a73e8;
        box-shadow: 0 0 4px rgba(26, 115, 232, 0.5);
    }

    button[type="submit"] {
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        color: #fff;
        background-color: #1a73e8;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    button[type="submit"]:hover {
        background-color: #0056c2;
    }

    button[type="submit"]:focus {
        outline: none;
        box-shadow: 0 0 4px rgba(26, 115, 232, 0.5);
    }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }

    .pagination a {
        padding: 8px 16px;
        margin: 0 5px;
        background-color: blue;
        color: #333;
        border-radius: 5px;
        text-decoration: none;
    }

    .pagination a:hover {
        background-color: #ddd;
    }

    .btn {
        padding: 8px 16px;
        font-size: 14px;
        border-radius: 4px;
        text-decoration: none;
        display: inline-block;
        text-align: center;
    }

    .btn-edit {
        background-color: #4CAF50;
        color: white;
        border: 1px solid #4CAF50;
        transition: background-color 0.3s ease;
    }

    .btn-edit:hover {
        background-color: #45a049;
    }

    .btn-details {
        background-color: #007bff;
        color: white;
        border: 1px solid #007bff;
        transition: background-color 0.3s ease;
    }

    .btn-details:hover {
        background-color: #0056b3;
    }

    .btn-delete {
        background-color: #f44336;
        color: white;
        border: 1px solid #f44336;
        transition: background-color 0.3s ease;
    }

    .btn-delete:hover {
        background-color: #e53935;
    }

    .table td a {
        margin-right: 10px;
    }

    .table .image-product {
        word-wrap: break-word;
        white-space: normal;
    }

    .table .image-product {
        max-width: 100px;
        height: auto;
    }

    .table .image-product {
        word-wrap: break-word;
        white-space: normal;
        max-width: 200px;
    }
</style>


<script>
    function validateForm() {
        const searchType = document.querySelector('select[name="searchType"]').value;
        const searchValue = document.querySelector('#searchValue').value;
        const errorMessage = document.querySelector('#error-message');

        if (searchType === "1" && isNaN(searchValue)) {
            errorMessage.style.display = "block";
            errorMessage.textContent = "Vui lòng nhập Id là một số.";
            return false;
        }

        errorMessage.style.display = "none";
        return true;
    }

    document.querySelector('select[name="searchType"]').addEventListener('change', function () {
        const searchInput = document.querySelector('#searchValue');
        searchInput.value = "";
    });
</script>
