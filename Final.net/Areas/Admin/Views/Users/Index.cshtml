@model IEnumerable<Final.net.Models.User>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var totalPages = ViewData["TotalPages"] as int? ?? 1;

}

<h1 style="text-align:center">Quản lý người dùng</h1>

<div class="flex" style="display:flex; gap:100px; margin:20px">
    <p>
        <a class="btn btn-primary" asp-action="Create">Tạo mới người dùng</a>
    </p>

    <form method="get" action="@Url.Action("Index")">
        <div class="input-group mb-3">
            <input style="width:600px;" type="text" name="searchQuery" class="form-control"
                placeholder="Tìm kiếm người dùng" value="@ViewData["SearchQuery"]" />
            <button class="btn btn-primary" type="submit">Tìm kiếm</button>
        </div>
    </form>
</div>



<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </th>
            <th>
                Action
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                </td>

                <td>
                    <a class="text-warning" asp-action="Edit" asp-route-id="@item.Id">Chỉnh sửa</a> |
                    <a class="text-primary" asp-action="Details" asp-route-id="@item.Id">Chi tiết</a> |
                    <a class="text-danger" asp-action="Delete" asp-route-id="@item.Id">Xoá</a>
                </td>
            </tr>
        }
    </tbody>
</table>


<!-- Phân trang -->
<div>
    <ul class="pagination">
        <!-- Nút trang đầu tiên -->
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = 1 })">Đầu</a>
        </li>

        <!-- Nút trang trước -->
        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">Trước</a>
        </li>

        <!-- Hiển thị số trang hiện tại -->
        <li class="page-item active">
            <span class="page-link">@currentPage</span>
        </li>

        <!-- Nút trang tiếp theo -->
        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Tiếp</a>
        </li>

        <!-- Nút trang cuối cùng -->
        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { page = totalPages })">Cuối</a>
        </li>
    </ul>
</div>